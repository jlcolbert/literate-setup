#+title:     Using Noweb Reference Syntax
#+author:    Jay L. Colbert
#+email:     jay.colbert@unh.edu

* Table of Contents :toc_3:
- [[#introduction][Introduction]]
- [[#noweb-reference-syntax][Noweb Reference Syntax]]
- [[#examples][Examples]]

* Introduction
=noweb= is a tool for Literate Programming.
It allows you to create references for code blocks.
Org can then replace the references with the source code block being references.
This way, you can arrange your document however you want and have it tangled in a specific order.

* Noweb Reference Syntax
The basis of =noweb= is the =<<code-block-id>>=.
You can name your code block anything you want.
Then, you place it in the =<< >>= brackets in another code block, and when you tangle and/or export it to another document, org has put the referenced code block into where you put the reference.

You'll need some header arguments in either your document or your individual code blocks.
For most cased, you'll need to put ~:noweb tangle~ in the header of the code block you want your referenced code to show up in.
Next, arrange this upper-level code block with your references in =<< >>= brackets.
Then, for the actual referenced code block, you'll put ~:tangle no :noweb-ref NAME-OF-BLOCK~.

* Examples
Look at the raw version of this document to see the header arguments!
Note that this does not include the file it will tangle to, since this is only an example.
You can find actual examples in the FAQ.

#+begin_src conf :noweb tangle
<<docker-from>>

<<docker-env>>

# Build-base: Package/compilation Essentials
# Git: for potential git-based NPM dependencies
<<docker-base>>

# Install node_modules with yarn
<<docker-node>>

<<docker-workdir>>

# Installs packages for any subdirectories
<<docker-install>>

<<docker-copy>>

<<docker-ports>>

<<docker-command>>
#+end_src

From here, each code block is in the order listed, but you could rearrange however!

#+begin_src conf :tangle no :noweb-ref docker-from
FROM node:current-alpine
#+end_src

#+begin_src conf :tangle no :noweb-ref docker-env
ENV INSTALL_PATH /app
#+end_src

#+begin_src conf :tangle no :noweb-ref docker-base
RUN apk add --update --no-cache \
  build-base \
  git

RUN apk add xvfb
#+end_src

#+begin_src conf :tangle no :noweb-ref docker-node
COPY package.json yarn.lock /tmp/
RUN cd /tmp && yarn set version berry && yarn config set nodeLinker node-modules && yarn install \
  && mkdir -p $INSTALL_PATH \
  && cd $INSTALL_PATH \
  && cp -R /tmp/node_modules $INSTALL_PATH \
  && rm -r /tmp/*
#+end_src

#+begin_src conf :tangle no :noweb-ref docker-workdir
WORKDIR $INSTALL_PATH
#+end_src

#+begin_src conf :tangle no :noweb-ref docker-install
COPY package.json yarn.lock ./
COPY ./primo-explore ./primo-explore
#+end_src

#+begin_src conf :tangle no :noweb-ref docker-copy
COPY . .
#+end_src

#+begin_src conf :tangle no :noweb-ref docker-ports
EXPOSE 8003 3001
#+end_src

#+begin_src conf :tangl no :noweb-ref docker-command
CMD VIEW=${VIEW} PROXY_SERVER=${PROXY_SERVER} VE=${VE} BROWSERIFY=${BROWSERIFY} USESCSS=${USESCSS} yarn start
#+end_src
